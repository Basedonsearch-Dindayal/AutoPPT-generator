export const dynamic = 'force-dynamic';

import PptxGenJS from 'pptxgenjs';

export async function POST(request) {
  try {
    // Parse the request body to get the topic
    const { topic } = await request.json();

    // Validate the topic
    if (!topic || typeof topic !== 'string' || !topic.trim()) {
      return new Response(
        JSON.stringify({ error: 'Topic is required and must be a non-empty string' }),
        {
          status: 400,
          headers: { 'Content-Type': 'application/json' },
        }
      );
    }

    // Create a new presentation
    const pptx = new PptxGenJS();
    
    // Set presentation properties
    pptx.author = 'Auto PPT Maker';
    pptx.company = 'AI Generated';
    pptx.title = `${topic} - Presentation`;

    // Title slide
    const titleSlide = pptx.addSlide();
    titleSlide.addText(topic, {
      x: 1,
      y: 2,
      w: 8,
      h: 2,
      fontSize: 44,
      bold: true,
      color: '363636',
      align: 'center'
    });
    titleSlide.addText('Generated by Auto PPT Maker', {
      x: 1,
      y: 4.5,
      w: 8,
      h: 1,
      fontSize: 18,
      color: '666666',
      align: 'center'
    });

    // Introduction slide
    const introSlide = pptx.addSlide();
    introSlide.addText('Introduction', {
      x: 0.5,
      y: 0.5,
      w: 9,
      h: 1,
      fontSize: 36,
      bold: true,
      color: '363636'
    });
    introSlide.addText([
      { text: `Welcome to this presentation about ${topic}.`, options: { fontSize: 20, color: '666666' } },
      { text: '\n\nThis presentation covers key aspects and insights related to the topic.', options: { fontSize: 18, color: '888888' } },
      { text: '\n\n• Overview and background', options: { fontSize: 16, color: '666666' } },
      { text: '\n• Key concepts and principles', options: { fontSize: 16, color: '666666' } },
      { text: '\n• Practical applications', options: { fontSize: 16, color: '666666' } },
      { text: '\n• Future considerations', options: { fontSize: 16, color: '666666' } }
    ], {
      x: 0.5,
      y: 1.5,
      w: 9,
      h: 5
    });

    // Overview slide
    const overviewSlide = pptx.addSlide();
    overviewSlide.addText('Overview', {
      x: 0.5,
      y: 0.5,
      w: 9,
      h: 1,
      fontSize: 36,
      bold: true,
      color: '363636'
    });
    overviewSlide.addText([
      { text: `${topic} is an important subject that requires careful consideration.`, options: { fontSize: 18, color: '666666' } },
      { text: '\n\nKey points to consider:', options: { fontSize: 16, color: '888888' } },
      { text: '\n\n• Understanding the fundamentals', options: { fontSize: 14, color: '666666' } },
      { text: '\n• Analyzing current trends and developments', options: { fontSize: 14, color: '666666' } },
      { text: '\n• Identifying opportunities and challenges', options: { fontSize: 14, color: '666666' } },
      { text: '\n• Developing strategic approaches', options: { fontSize: 14, color: '666666' } },
      { text: '\n• Implementing best practices', options: { fontSize: 14, color: '666666' } }
    ], {
      x: 0.5,
      y: 1.5,
      w: 9,
      h: 5
    });

    // Key Concepts slide
    const conceptsSlide = pptx.addSlide();
    conceptsSlide.addText('Key Concepts', {
      x: 0.5,
      y: 0.5,
      w: 9,
      h: 1,
      fontSize: 36,
      bold: true,
      color: '363636'
    });
    conceptsSlide.addText([
      { text: `Understanding ${topic} requires knowledge of several key concepts:`, options: { fontSize: 18, color: '666666' } },
      { text: '\n\n1. Foundation Principles', options: { fontSize: 16, bold: true, color: '444444' } },
      { text: '\n   Essential building blocks and core ideas', options: { fontSize: 14, color: '666666' } },
      { text: '\n\n2. Current Applications', options: { fontSize: 16, bold: true, color: '444444' } },
      { text: '\n   How these concepts are applied today', options: { fontSize: 14, color: '666666' } },
      { text: '\n\n3. Future Potential', options: { fontSize: 16, bold: true, color: '444444' } },
      { text: '\n   Emerging opportunities and developments', options: { fontSize: 14, color: '666666' } }
    ], {
      x: 0.5,
      y: 1.5,
      w: 9,
      h: 5
    });

    // Applications slide
    const applicationsSlide = pptx.addSlide();
    applicationsSlide.addText('Practical Applications', {
      x: 0.5,
      y: 0.5,
      w: 9,
      h: 1,
      fontSize: 36,
      bold: true,
      color: '363636'
    });
    applicationsSlide.addText([
      { text: `${topic} has numerous practical applications across various domains:`, options: { fontSize: 18, color: '666666' } },
      { text: '\n\n• Industry Implementation', options: { fontSize: 16, color: '666666' } },
      { text: '\n  Real-world use cases and success stories', options: { fontSize: 14, color: '888888' } },
      { text: '\n\n• Research and Development', options: { fontSize: 16, color: '666666' } },
      { text: '\n  Ongoing studies and innovations', options: { fontSize: 14, color: '888888' } },
      { text: '\n\n• Educational Applications', options: { fontSize: 16, color: '666666' } },
      { text: '\n  Learning and teaching methodologies', options: { fontSize: 14, color: '888888' } },
      { text: '\n\n• Future Opportunities', options: { fontSize: 16, color: '666666' } },
      { text: '\n  Potential areas for growth and development', options: { fontSize: 14, color: '888888' } }
    ], {
      x: 0.5,
      y: 1.5,
      w: 9,
      h: 5
    });

    // Conclusion slide
    const conclusionSlide = pptx.addSlide();
    conclusionSlide.addText('Conclusion', {
      x: 0.5,
      y: 0.5,
      w: 9,
      h: 1,
      fontSize: 36,
      bold: true,
      color: '363636'
    });
    conclusionSlide.addText([
      { text: `In conclusion, ${topic} represents a significant area of interest with:`, options: { fontSize: 18, color: '666666' } },
      { text: '\n\n✓ Strong foundational principles', options: { fontSize: 16, color: '4CAF50' } },
      { text: '\n✓ Diverse practical applications', options: { fontSize: 16, color: '4CAF50' } },
      { text: '\n✓ Promising future potential', options: { fontSize: 16, color: '4CAF50' } },
      { text: '\n✓ Ongoing research and development', options: { fontSize: 16, color: '4CAF50' } },
      { text: '\n\nThank you for your attention!', options: { fontSize: 20, bold: true, color: '363636' } }
    ], {
      x: 0.5,
      y: 1.5,
      w: 9,
      h: 5
    });

    // Generate the presentation as a buffer
    const pptxBuffer = await pptx.write('nodebuffer');

    // Generate a filename based on the topic
    const sanitizedTopic = topic.trim().replace(/[^a-zA-Z0-9]/g, '_');
    const filename = `${sanitizedTopic}_presentation.pptx`;

    // Return the file with proper headers
    return new Response(pptxBuffer, {
      status: 200,
      headers: {
        'Content-Type': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',
        'Content-Disposition': `attachment; filename="${filename}"`,
        'Content-Length': pptxBuffer.length.toString(),
      },
    });

  } catch (error) {
    console.error('API route error:', error);

    return new Response(
      JSON.stringify({ 
        error: 'Internal server error',
        details: 'An unexpected error occurred while generating your presentation'
      }),
      {
        status: 500,
        headers: { 'Content-Type': 'application/json' },
      }
    );
  }
}